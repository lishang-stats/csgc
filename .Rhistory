renv::init()
?gen_adj_sbm
?csgc
devtools::document()
devtools::document()
?csgc
?gen_adj_sbm
file.create("R/gen_adj_dcsbm.R")
devtools::document()
?gen_adj_dcsbm
devtools::document()
?sbm
?gen_adj_sbm
renv::init()
trace(matrix(1,2,3,4),2,2)
trace(matrix(1,2,3,4),2,2))
trace(matrix(c(1,2,3,4),2,2))
renv::snapshot()
file.create
file.create("R/sbm_mle.R")
devtools::document()
?sbm_mle
usethis::use_package(package = "renv", type="Imports")
file.create("R/dcsbm_mle.R")
?gen_adj_dcsbm
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?dcsbm_mle
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::document()
?devtools
?dcsbm_mle
library(csgc)
k = 4
n = 200
prob = c(0.8, 0.1)
K = matrix(prob[2],k,k)
diag(K) = prob[1]
Theta = runif(n,0.8,1)
z = rep(1:k,each=n/k)
A = gen_adj_dcsbm(K,z)$A
dcsbm_mle(A,z)
gen_adj_dcsbm
devtools::document()
library(csgc)
k = 4
n = 200
prob = c(0.8, 0.1)
K = matrix(prob[2],k,k)
diag(K) = prob[1]
Theta = runif(n,0.8,1)
z = rep(1:k,each=n/k)
A = gen_adj_dcsbm(K,z)$A
dcsbm_mle(A,z)
library(csgc)
k = 4
n = 200
prob = c(0.8, 0.1)
K = matrix(prob[2],k,k)
diag(K) = prob[1]
Theta = runif(n,0.8,1)
z = rep(1:k,each=n/k)
A = gen_adj_dcsbm(K,Theta,z)$A
dcsbm_mle(A,z)
devtools::build()
install.packages("D:/NUS/Adrian_Roellin/Project2/csgc_0.0.0.9000.tar.gz", repos = NULL, type = "source")
